### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.2
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student),size=3.5, vjust=0.6)
# Print plot
print(timeline_plot)
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.5
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.5
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student),size=3.5, vjust=0.6)
# Print plot
print(timeline_plot)
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.1
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student),size=3.5, vjust=0.6)
# Print plot
print(timeline_plot)
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- merge(x=raw, y=line_pos, by="final_year", all = TRUE)
# Create a one month "buffer" at the start and end of the timeline
month_buffer <- 1
month_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='month')
# We are adding one month before and one month after the earliest and latest milestone in the clinical course.
## We want the format of the months to be in the 3 letter abbreviations of each month.
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='year')
# We will only show the years for which we have a december to january transition.
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")),
origin = "2000-01-01")
# We want the format to be in the four digit format for years.
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
timeline_plot<-ggplot(raw,
aes(x=final_year, y = position, col=degree, label=student))
# Add the label Milestones
timeline_plot<-timeline_plot+labs(col="student")
# Print plot
timeline_plot
library(tidyverse)
library(timevis)
library(gsheet)
library(lubridate)
raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1ywH43KsxIB2HjnLgAuoCt-1uIyuagDZgIQttlOnmIWs/edit?usp=sharing", "graduates")
raw$final_year <- ymd(raw$final_year) #setting submission as a date class
event_colours <- c("#D11141", "#F37735", "#F37735", "#00b159", "#00b159") #red, orange, green = PhD, MSc/MSc Agric, Hons
event_levels <- c("PhD", "MSc", "MSc Agric", "BSc Hons", "BSc Agric")
raw$degree <- factor(raw$degree, levels= event_levels, ordered=TRUE)
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- merge(x=raw, y=line_pos, by="final_year", all = TRUE)
# Create a one month "buffer" at the start and end of the timeline
month_buffer <- 1
month_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='month')
# We are adding one month before and one month after the earliest and latest milestone in the clinical course.
## We want the format of the months to be in the 3 letter abbreviations of each month.
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='year')
# We will only show the years for which we have a december to january transition.
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")),
origin = "2000-01-01")
# We want the format to be in the four digit format for years.
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
timeline_plot<-ggplot(raw,
aes(x=final_year, y = position, col=degree, label=student))
# Add the label Milestones
timeline_plot<-timeline_plot+labs(col="student")
# Print plot
timeline_plot
# Assigning the colors and order to the milestones
timeline_plot<-timeline_plot+scale_color_manual(values=event_colours, labels=event_levels, drop = FALSE)
# Using the classic theme to remove background gray
timeline_plot<-timeline_plot+theme_classic()
# Plot a horizontal line at y=0 for the timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Print plot
timeline_plot
# Plot the vertical lines for our timeline's milestone events
timeline_plot<-timeline_plot+geom_segment(data=raw, aes(y=raw$position,yend=0,xend=raw$final_year), color='black', size=0.2)
# Now let's plot the scatter points at the tips of the vertical lines and date
timeline_plot<-timeline_plot+geom_point(aes(y=raw$position), size=3)
# Let's remove the axis since this is a horizontal timeline and postion the legend to the bottom
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Print plot
timeline_plot
timeline_plot<-timeline_plot+geom_text(data=year_df, aes(x=year_date_range,y=-0.25,label=year_format, fontface="bold"),size=3.5, color='black')
#print plot
timeline_plot
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.1
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student),size=3.5, vjust=0.6)
# Print plot
print(timeline_plot)
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- merge(x=raw, y=line_pos, by="final_year", all = TRUE)
# Create a one month "buffer" at the start and end of the timeline
month_buffer <- 1
month_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='month')
# We are adding one month before and one month after the earliest and latest milestone in the clinical course.
## We want the format of the months to be in the 3 letter abbreviations of each month.
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='year')
# We will only show the years for which we have a december to january transition.
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")),
origin = "1970-01-01")
# We want the format to be in the four digit format for years.
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
timeline_plot<-ggplot(raw,
aes(x=final_year, y = position, col=degree, label=student))
# Add the label Milestones
timeline_plot<-timeline_plot+labs(col="student")
# Print plot
timeline_plot
library(tidyverse)
library(timevis)
library(gsheet)
library(lubridate)
raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1ywH43KsxIB2HjnLgAuoCt-1uIyuagDZgIQttlOnmIWs/edit?usp=sharing", "graduates")
raw$final_year <- ymd(raw$final_year) #setting submission as a date class
event_colours <- c("#D11141", "#F37735", "#F37735", "#00b159", "#00b159") #red, orange, green = PhD, MSc/MSc Agric, Hons
event_levels <- c("PhD", "MSc", "MSc Agric", "BSc Hons", "BSc Agric")
raw$degree <- factor(raw$degree, levels= event_levels, ordered=TRUE)
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- merge(x=raw, y=line_pos, by="final_year", all = TRUE)
# Create a one month "buffer" at the start and end of the timeline
month_buffer <- 1
month_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='month')
# We are adding one month before and one month after the earliest and latest milestone in the clinical course.
## We want the format of the months to be in the 3 letter abbreviations of each month.
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='year')
# We will only show the years for which we have a december to january transition.
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")),
origin = "1970-01-01")
# We want the format to be in the four digit format for years.
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
timeline_plot<-ggplot(raw,
aes(x=final_year, y = position, col=degree, label=student))
# Add the label Milestones
timeline_plot<-timeline_plot+labs(col="student")
# Print plot
timeline_plot
# Assigning the colors and order to the milestones
timeline_plot<-timeline_plot+scale_color_manual(values=event_colours, labels=event_levels, drop = FALSE)
# Using the classic theme to remove background gray
timeline_plot<-timeline_plot+theme_classic()
# Plot a horizontal line at y=0 for the timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Print plot
timeline_plot
# Plot the vertical lines for our timeline's milestone events
timeline_plot<-timeline_plot+geom_segment(data=raw, aes(y=raw$position,yend=0,xend=raw$final_year), color='black', size=0.2)
# Now let's plot the scatter points at the tips of the vertical lines and date
timeline_plot<-timeline_plot+geom_point(aes(y=raw$position), size=3)
# Let's remove the axis since this is a horizontal timeline and postion the legend to the bottom
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Print plot
timeline_plot
timeline_plot<-timeline_plot+geom_text(data=year_df, aes(x=year_date_range,y=-0.25,label=year_format, fontface="bold"),size=3.5, color='black')
#print plot
timeline_plot
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.1
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student),size=3.5, vjust=0.6)
# Print plot
print(timeline_plot)
timeline_plot
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student),size=7, vjust=0.6)
# Print plot
print(timeline_plot)
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student), size=3, vjust=0.6)
# Print plot
print(timeline_plot)
timeline_plot
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.1
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student), size=3, vjust=0.6)
# Print plot
print(timeline_plot)
timeline_plot
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1ywH43KsxIB2HjnLgAuoCt-1uIyuagDZgIQttlOnmIWs/edit?usp=sharing", "graduates")
raw$final_year <- ymd(raw$final_year) #setting submission as a date class
event_colours <- c("#D11141", "#F37735", "#F37735", "#00b159", "#00b159") #red, orange, green = PhD, MSc/MSc Agric, Hons
event_levels <- c("PhD", "MSc", "MSc Agric", "BSc Hons", "BSc Agric")
raw$degree <- factor(raw$degree, levels= event_levels, ordered=TRUE)
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- merge(x=raw, y=line_pos, by="final_year", all = TRUE)
# Create a one month "buffer" at the start and end of the timeline
month_buffer <- 1
month_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='month')
# We are adding one month before and one month after the earliest and latest milestone in the clinical course.
## We want the format of the months to be in the 3 letter abbreviations of each month.
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='year')
# We will only show the years for which we have a december to january transition.
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")),
origin = "1970-01-01")
# We want the format to be in the four digit format for years.
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
timeline_plot<-ggplot(raw,
aes(x=final_year, y = position, col=degree, label=student))
# Add the label Milestones
timeline_plot<-timeline_plot+labs(col="student")
# Print plot
timeline_plot
# Assigning the colors and order to the milestones
timeline_plot<-timeline_plot+scale_color_manual(values=event_colours, labels=event_levels, drop = FALSE)
# Using the classic theme to remove background gray
timeline_plot<-timeline_plot+theme_classic()
# Plot a horizontal line at y=0 for the timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Print plot
timeline_plot
# Plot the vertical lines for our timeline's milestone events
timeline_plot<-timeline_plot+geom_segment(data=raw, aes(y=raw$position,yend=0,xend=raw$final_year), color='black', size=0.2)
# Now let's plot the scatter points at the tips of the vertical lines and date
timeline_plot<-timeline_plot+geom_point(aes(y=raw$position), size=3)
# Let's remove the axis since this is a horizontal timeline and postion the legend to the bottom
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Print plot
timeline_plot
timeline_plot<-timeline_plot+geom_text(data=year_df, aes(x=year_date_range,y=-0.25,label=year_format, fontface="bold"),size=3.5, color='black')
#print plot
timeline_plot
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.1
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student), size= 3, vjust=0.6)
# Print plot
print(timeline_plot)
timeline_plot
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(timevis)
library(gsheet)
library(lubridate)
raw <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1ywH43KsxIB2HjnLgAuoCt-1uIyuagDZgIQttlOnmIWs/edit?usp=sharing", "graduates")
raw$final_year <- ymd(raw$final_year) #setting submission as a date class
event_colours <- c("#D11141", "#F37735", "#F37735", "#00b159", "#00b159") #red, orange, green = PhD, MSc/MSc Agric, Hons
event_levels <- c("PhD", "MSc", "MSc Agric", "BSc Hons", "BSc Agric")
raw$degree <- factor(raw$degree, levels= event_levels, ordered=TRUE)
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
# Assign the positions & directions to each date from those set above.
line_pos <- data.frame(
"final_year"=unique(raw$final_year),
"position"=rep(positions, length.out=length(unique(raw$final_year))),
"direction"=rep(directions, length.out=length(unique(raw$final_year))))
raw <- merge(x=raw, y=line_pos, by="final_year", all = TRUE)
# Create a one month "buffer" at the start and end of the timeline
month_buffer <- 1
month_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='month')
# We are adding one month before and one month after the earliest and latest milestone in the clinical course.
## We want the format of the months to be in the 3 letter abbreviations of each month.
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
year_date_range <- seq(min(raw$final_year) - months(month_buffer), max(raw$final_year) + months(month_buffer), by='year')
# We will only show the years for which we have a december to january transition.
year_date_range <- as.Date(
intersect(
ceiling_date(year_date_range, unit="year"),
floor_date(year_date_range, unit="year")),
origin = "1970-01-01")
# We want the format to be in the four digit format for years.
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
timeline_plot<-ggplot(raw,
aes(x=final_year, y = position, col=degree, label=student))
# Add the label Milestones
timeline_plot<-timeline_plot+labs(col="student")
# Print plot
timeline_plot
# Assigning the colors and order to the milestones
timeline_plot<-timeline_plot+scale_color_manual(values=event_colours, labels=event_levels, drop = FALSE)
# Using the classic theme to remove background gray
timeline_plot<-timeline_plot+theme_classic()
# Plot a horizontal line at y=0 for the timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0,
color = "black", size=0.3)
# Print plot
timeline_plot
# Plot the vertical lines for our timeline's milestone events
timeline_plot<-timeline_plot+geom_segment(data=raw, aes(y=raw$position,yend=0,xend=raw$final_year), color='black', size=0.2)
# Now let's plot the scatter points at the tips of the vertical lines and date
timeline_plot<-timeline_plot+geom_point(aes(y=raw$position), size=3)
# Let's remove the axis since this is a horizontal timeline and postion the legend to the bottom
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Print plot
timeline_plot
timeline_plot<-timeline_plot+geom_text(data=year_df, aes(x=year_date_range,y=-0.25,label=year_format, fontface="bold"),size=3.5, color='black')
#print plot
timeline_plot
# We need to add the labels of each milestone now.
## To do this we have to define the text position. A clean timeline should have the labels situatuated a bit above the scatter points.
### Since we have the positions of the points already defined, we will place the labels 0.2 pts away from the scatter points.
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.1
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(raw$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
raw$text_position<- text_position * raw$direction
raw
# Now we can add the labels to the timeline for our milestones.
timeline_plot<-timeline_plot+geom_text(aes(y=raw$text_position,label=student), size= 3, vjust=0.6)
# Print plot
print(timeline_plot)
timeline_plot
